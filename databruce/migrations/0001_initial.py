# Generated by Django 5.1.7 on 2025-09-07 18:07

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchiveLinks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('url', models.TextField(blank=True, db_column='archive_url', null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'archive_links',
                'db_table': 'archive_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bands',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('brucebase_url', models.TextField(blank=True, default=None, unique=True)),
                ('name', models.TextField(blank=True, default=None)),
                ('appearances', models.IntegerField(default=0)),
                ('springsteen_band', models.BooleanField()),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'bands',
                'db_table': 'bands',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bootlegs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('slid', models.IntegerField(blank=True, default=None)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('category', models.TextField(blank=True, default=None)),
                ('title', models.TextField(blank=True, default=None)),
                ('label', models.TextField(blank=True, default=None)),
                ('source', models.TextField(blank=True, default=None)),
                ('source_info', models.TextField(blank=True, default=None)),
                ('version_info', models.TextField(blank=True, default=None)),
                ('transfer', models.TextField(blank=True, default=None)),
                ('editor', models.TextField(blank=True, default=None)),
                ('type', models.TextField(blank=True, default=None)),
                ('catalog_number', models.TextField(blank=True, default=None)),
                ('media_type', models.TextField(blank=True, default=None)),
                ('has_info', models.BooleanField()),
                ('has_artwork', models.BooleanField()),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'bootlegs',
                'db_table': 'bootlegs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BootlegsByDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.TextField(blank=True, default=None)),
                ('venue_location', models.TextField(blank=True, default=None)),
                ('count', models.BigIntegerField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'Bootlegs By Date',
                'db_table': 'bootlegs_by_date',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('name', models.TextField(blank=True, db_column='name', default=None)),
                ('num_events', models.IntegerField(blank=True, default=None)),
                ('aliases', models.TextField(blank=True, default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'cities',
                'db_table': 'cities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Continents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.TextField(blank=True, db_column='continent_name', default=None)),
                ('num_events', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'continents',
                'db_table': 'continents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.TextField(blank=True, default=None, unique=True)),
                ('num_events', models.IntegerField(blank=True, default=None)),
                ('alpha_2', models.TextField(blank=True, default=None, max_length=2)),
                ('alpha_3', models.TextField(blank=True, default=None, max_length=3)),
                ('aliases', models.TextField(blank=True, default=None)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Covers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('event_date', models.TextField(blank=True, default=None)),
                ('url', models.TextField(blank=True, db_column='cover_url', default=None, unique=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'covers',
                'db_table': 'covers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, default=None)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('num', models.IntegerField(db_column='event_num')),
                ('id', models.TextField(db_column='event_id', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='event_date', default=None)),
                ('early_late', models.CharField(blank=True, choices=[('Evening', 'Evening'), ('Late', 'Late'), ('Third', 'Third'), ('Early', 'Early'), ('Afternoon', 'Afternoon'), ('Morning', 'Morning')], default=None)),
                ('public', models.BooleanField(blank=True, default=False)),
                ('brucebase_url', models.TextField(blank=True, default=None)),
                ('type', models.CharField(blank=True, choices=[('Anniversary', 'Anniversary'), ('Award Ceremony', 'Award Ceremony'), ('Benefit Concert', 'Benefit Concert'), ('Birthday', 'Birthday'), ('Cancelled', 'Cancelled'), ('Celebration', 'Celebration'), ('Concert', 'Concert'), ('Concert for TV Broadcast', 'Concert for TV Broadcast'), ('Filmshoot', 'Filmshoot'), ('Funeral', 'Funeral'), ('Interview', 'Interview'), ('Jam Session', 'Jam Session'), ('Keynote Speech', 'Keynote Speech'), ('Memorial', 'Memorial'), ('Music Festival', 'Music Festival'), ('No Gig', 'No Gig'), ('Politics', 'Politics'), ('Recording', 'Recording'), ('Rehearsal', 'Rehearsal'), ('Relocated', 'Relocated'), ('Rescheduled', 'Rescheduled'), ('Wedding', 'Wedding')], db_column='event_type', default=None)),
                ('title', models.TextField(blank=True, db_column='event_title', default=None)),
                ('event_certainty', models.CharField(blank=True, choices=[('Unknown Date', 'Unknown Date'), ('Confirmed', 'Confirmed'), ('Unknown Location', 'Unknown Location')], default=None)),
                ('setlist_certainty', models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Confirmed', 'Confirmed'), ('Probable', 'Probable')], default=None)),
                ('note', models.TextField(blank=True, default=None)),
                ('bootleg', models.BooleanField(blank=True, default=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'events',
                'db_table': 'events',
                'ordering': ['id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guests',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'guests',
                'db_table': 'guests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lyrics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('version', models.TextField(db_column='version_info')),
                ('num', models.TextField(db_column='version_num')),
                ('source', models.TextField(db_column='source_info')),
                ('text', models.TextField(db_column='lyrics')),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lyrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NugsReleases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('nugs_id', models.IntegerField(blank=True, default=None)),
                ('date', models.DateField(blank=True, db_column='release_date', default=None)),
                ('url', models.TextField(blank=True, db_column='nugs_url', default=None)),
                ('thumbnail', models.TextField(blank=True, db_column='thumbnail_url', default=None)),
                ('name', models.TextField(blank=True, default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'nugs_releases',
                'db_table': 'nugs_releases',
                'ordering': ['-event__id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Onstage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('note', models.TextField(blank=True, default=None)),
                ('guest', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'onstage',
                'db_table': 'onstage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OpenersClosers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.TextField(blank=True, default=None)),
                ('position', models.TextField(blank=True, default=None)),
                ('num', models.BigIntegerField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'openers_closers',
                'db_table': 'openers_closers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PremiereDebut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_name', models.TextField(blank=True, default=None)),
                ('debuts', models.TextField(blank=True, default=None)),
                ('premiere', models.IntegerField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'premiere_debut',
                'db_table': 'premiere_debut',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Relations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('brucebase_url', models.TextField(blank=True, default=None, unique=True)),
                ('name', models.TextField(blank=True, default=None)),
                ('appearances', models.IntegerField(default=0)),
                ('aliases', models.TextField(blank=True, default=None)),
                ('instruments', models.TextField(blank=True, default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'relations',
                'db_table': 'relations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Releases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('brucebase_id', models.TextField(blank=True, default=None)),
                ('name', models.TextField(blank=True, default=None)),
                ('type', models.TextField(blank=True, default=None)),
                ('format', models.TextField(blank=True, default=None)),
                ('date', models.DateField(blank=True, db_column='release_date', default=None)),
                ('short_name', models.TextField(blank=True, default=None)),
                ('thumb', models.TextField(blank=True, default=None)),
                ('note', models.TextField(blank=True, default=None)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'releases',
                'db_table': 'releases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseTracks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('track', models.IntegerField(db_column='track_num')),
                ('note', models.TextField(blank=True, default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'release_tracks',
                'db_table': 'release_tracks',
                'ordering': ['release__name', 'track'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Runs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.TextField()),
                ('num_shows', models.IntegerField(blank=True, null=True)),
                ('num_songs', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'runs',
                'db_table': 'runs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Setlists',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('set_name', models.CharField(blank=True, choices=[('Soundcheck', 'Soundcheck'), ('Interview', 'Interview'), ('Post-Show', 'Post-Show'), ('Set 1', 'Set 1'), ('Set 2', 'Set 2'), ('Encore', 'Encore'), ('Pre-Show', 'Pre-Show'), ('Show', 'Show'), ('Recording', 'Recording'), ('Rehearsal', 'Rehearsal')], default='Show')),
                ('song_num', models.IntegerField(default=1)),
                ('song_note', models.TextField(blank=True, default=None)),
                ('segue', models.BooleanField(default=False)),
                ('premiere', models.BooleanField(default=False)),
                ('debut', models.BooleanField(default=False)),
                ('instrumental', models.BooleanField(default=False)),
                ('snippet', models.BooleanField(default=False)),
                ('band_premiere', models.BooleanField(db_column='band_premiere', default=False)),
                ('position', models.TextField(blank=True, default=None)),
                ('last', models.IntegerField(blank=True, default=None)),
                ('next', models.IntegerField(blank=True, default=None)),
                ('sign_request', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'setlists',
                'db_table': 'setlists',
                'ordering': ('-event_id', 'song_num'),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SetlistsBySetAndDate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('set_order', models.IntegerField(blank=True, default=None)),
                ('set_name', models.TextField(blank=True, default=None)),
                ('setlist', models.TextField(blank=True, default=None)),
                ('setlist_no_note', models.TextField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'setlists_by_set_and_date',
                'db_table': 'setlists_by_set_and_date',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Snippets',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('position', models.IntegerField(db_column='snippet_pos')),
                ('note', models.TextField(blank=True, db_column='snippet_note', default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'snippets',
                'db_table': 'snippets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongGaps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_num', models.IntegerField(blank=True, default=None)),
                ('last', models.TextField(blank=True, default=None)),
                ('next', models.TextField(blank=True, default=None)),
                ('last_time_played', models.TextField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'song_gaps',
                'db_table': 'song_gaps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Songs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('brucebase_url', models.TextField(unique=True)),
                ('name', models.TextField(blank=True, db_column='song_name', default=None, verbose_name='Name')),
                ('short_name', models.TextField(blank=True, default=None, verbose_name='Short Name')),
                ('num_plays_public', models.IntegerField(db_column='num_plays_public', default=0)),
                ('num_plays_private', models.IntegerField(db_column='num_plays_private', default=0)),
                ('num_plays_snippet', models.IntegerField(db_column='num_plays_snippet', default=0)),
                ('opener', models.IntegerField(default=0)),
                ('closer', models.IntegerField(default=0)),
                ('sniponly', models.IntegerField(default=0)),
                ('original_artist', models.TextField(blank=True, default=None, verbose_name='Original Artist')),
                ('original', models.BooleanField(default=False)),
                ('lyrics', models.BooleanField(default=False)),
                ('category', models.TextField(blank=True, default=None)),
                ('spotify_id', models.TextField(blank=True, default=None)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('length', models.TimeField(blank=True, default=None)),
                ('aliases', models.TextField(blank=True, default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'songs',
                'db_table': 'songs',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongsAfterRelease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.TextField(blank=True, default=None)),
                ('first_release', models.DateField(blank=True, default=None)),
                ('first_event', models.TextField(blank=True, default=None)),
                ('num_post_release', models.BigIntegerField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'songs_after_release',
                'db_table': 'songs_after_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('abbrev', models.TextField(blank=True, db_column='state_abbrev', default=None, unique=True)),
                ('name', models.TextField(blank=True, default=None)),
                ('num_events', models.IntegerField(default=0)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'states',
                'db_table': 'states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudioSessions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.TextField()),
                ('num_events', models.IntegerField(blank=True, null=True)),
                ('num_songs', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'studio_sessions',
                'db_table': 'studio_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('tags', models.TextField(blank=True, default=None)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'tags',
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TourLegs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.TextField(blank=True, default=None)),
                ('num_shows', models.IntegerField(default=0)),
                ('num_songs', models.IntegerField(default=0)),
                ('note', models.TextField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'tour_legs',
                'db_table': 'tour_legs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tours',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('brucebase_id', models.TextField(blank=True, default=None, unique=True)),
                ('brucebase_tag', models.TextField()),
                ('name', models.TextField(blank=True, db_column='tour_name', default=None)),
                ('slug', models.TextField(blank=True, default=None)),
                ('num_shows', models.IntegerField(default=0)),
                ('num_songs', models.IntegerField(default=0)),
                ('num_legs', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'tours',
                'db_table': 'tours',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Updates',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField(blank=True, null=True)),
                ('item', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, db_column='to_value', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('view', models.TextField(blank=True, null=True)),
                ('msg', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'updates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAttendedShows',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'user_attended_shows',
                'db_table': 'user_attended_shows',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venues',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('brucebase_url', models.TextField(blank=True, default=None, unique=True)),
                ('name', models.TextField(blank=True, default=None)),
                ('detail', models.TextField(blank=True, default=None, unique=True)),
                ('num_events', models.IntegerField(default=0)),
                ('aliases', models.TextField(blank=True, default=None)),
                ('mbid', models.UUIDField(default=None, editable=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'venues',
                'db_table': 'venues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SetlistsByDate',
            fields=[
                ('event', models.OneToOneField(blank=True, db_column='event_id', default=None, on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='databruce.events')),
                ('setlist', models.TextField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'setlists_by_date',
                'db_table': 'setlists_by_date',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SetlistNotes',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='notes_setlist', serialize=False, to='databruce.setlists')),
                ('num', models.TextField(blank=True, default=None)),
                ('note', models.TextField(blank=True, default=None)),
                ('gap', models.TextField(blank=True, default=None)),
                ('last_date', models.TextField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'setlist_notes',
                'db_table': 'setlist_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongsPage',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='databruce.songs')),
                ('note', models.TextField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'songs_page',
                'db_table': 'songs_page',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenuesText',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='databruce.venues')),
                ('formatted_loc', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'venues_text',
                'db_table': 'venues_text',
                'managed': False,
            },
        ),
    ]
